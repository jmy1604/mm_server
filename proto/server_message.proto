syntax = "proto3";
package msg.server_message;

enum MSGID {
	NONE						= 0;
	G2C_GAME_SERVER_REGISTER 	= 20000;
	G2C_GAME_SERVER_UNREDISTER 	= 20001;
	
	C2G_LOGIN_SERVER_LIST 		= 20010;
	C2G_NEW_LOGIN_SERVER_ADD 	= 20011;
	C2G_LOGIN_SERVER_REMOVE 	= 20012;
	
	G2L_GAME_SERVER_REGISTER    = 21000;
	G2L_GAME_SERVER_UNREGISTER	= 21001;
	L2G_DISCONNECT_NOTIFY		= 21002;
	L2G_SYNC_ACCOUNT_TOKEN		= 21003;
	L2G_BIND_NEW_ACCOUNT_REQUEST= 21100;
	G2L_BIND_NEW_ACCOUNT_RESPONSE = 21101;
	G2L_ACCOUNT_LOGOUT_NOTIFY	= 21200;
	G2L_ACCOUNT_BAN				= 21300;
	
	L2C_LOGIN_SERVER_REGISTER	= 22004;
	L2C_LOGIN_SERVER_UNREGISTER	= 22005;
	L2C_GET_PLAYER_ACC_INFO		= 22006;
	
	C2L_PLAYER_ACC_INFO			= 23007;
}

/**************************** common message struct define ******************************/

message LoginServerInfo {
	int32 ServerId			= 1; // 服务器Id
	string ServerName 		= 2; // 服务器名称
	string ListenGameIP 	= 3; // 监听GameServer的IP地址
	string ListenClientIP 	= 4; // 监听客户端的IP地址
}

message PlayerBaseInfo {
	int32 Lvl 				= 1; // 我的等级
	int32 Exp 				= 2; // 我的经验
	int32 CurMaxStage 		= 3; // 最大关卡数目
	string Name 			= 4; // 玩家名称
	int32 Icon 				= 5; // 玩家图标
	string CustomIcon 		= 6; // 玩家自定义图标
}

// 玩家某一个关卡的信息
message PlayerStageInfo {
	int32 PlayerId 			= 1; // 玩家Id
	int32 Score 			= 2; // 我的积分
	string Name 			= 3; // 玩家名称
	int32 Lvl 				= 4; // 玩家等级
	string Icon 			= 5; // 玩家图标
	string CustomIcon 		= 6; // 玩家自定义图标
}

/*************************************** end ********************************************/

/**************************** game_server and center server ****************************/

/// game->center GameServer注册
message G2CGameServerRegister {
	int32 ServerId 			= 1; // 服务器Id
	string ServerName 		= 2; // 服务器名称
	string ListenRoomIP 	= 3; // 监听Room的IP
	string ListenClientIP 	= 4; // 监听客户端的地址
}

/// game->center GameServer注销
message G2CGameServerUnRegister {
	int32 ServerId 			= 1; // 服务器Id
}

// center->game 同步服务器列表(仅仅会在收到注册消息的时候发这条消息)
message C2GLoginServerList {
	repeated LoginServerInfo ServerList = 1; // 登录服务器列表信息
}

// center->game 新的得LoginServer增加
message C2GNewLoginServerAdd {
	LoginServerInfo Server 	= 1; // 登录服务器信息
}

// center->game GameServer断开连接
message C2GLoginServerRemove {
	int32 ServerId 			= 1; // 登录服务器ID
}

/*************************************** end ********************************************/

/**************************** game_server and login server ******************************/

/// game->login game注册
message G2LGameServerRegister {
	int32 ServerId 			= 1; // 服务器Id
	string ServerName 		= 2; // 服务器名称
	string ListenClientIP 	= 3; // 监听客户端的地址
}

/// game->login game注销
message G2LGameServerUnRegister {
	int32 ServerId 			= 1; // 服务器Id
	int32 Reason 			= 2; // 断开原因
}

/// login->game 强制断开
message L2GDissconnectNotify {
	int32 Reason 			= 1; // 断开原因
}

/// login->game 同步账号临时密码
message L2GSyncAccountToken {
	string UniqueId			= 1; // 唯一ID
	string Account 			= 2; // 账号
	string Token 			= 3; // 临时token
	int64 PlayerId 			= 4; // 玩家Id
}

/// login->game 绑定新账号
message L2GBindNewAccountRequest {
	string UniqueId			= 1; // 唯一ID
	string Account 			= 2; // 账号
	string NewAccount 		= 3; // 新账号
}

message G2LBindNewAccountResponse {
	string UniqueId			= 1;
	string Account 			= 2;
	string NewAccount 		= 3;
}

// game->login 登出游戏通知
message G2LAccountLogoutNotify {
	string Account 			= 1;
}

// game->login 封号
message G2LAccountBan {
	string UniqueId			= 1;
	int32 BanOrFree			= 2;
	string Account			= 3;
	int32 PlayerId			= 4;
}

/*************************************** end ********************************************/

/**************************** login_server and center server ****************************/

/// Login->Center Login注册
message L2CLoginServerRegister {
	int32 ServerId 			= 1; // 服务器Id
	string ServerName 		= 2; // 服务器名称
	string ListenGameIP 	= 3; // 监听MatchServer的IP
	string ListenClientIP 	= 4; // 监听Client的IP
}

/// Login->Center Login注销
message L2CLoginServerUnRegister {
	int32 ServerId 			= 1; // 服务器Id
	int32 Reason 			= 2; // 断开原因
}

/// Login->Center 获取玩家账号Id和所在大厅信息
message L2CGetPlayerAccInfo {
	string Account 			= 1; // 玩家账号
}

/// Center->Login 玩家账号信息回复
message C2LPlayerAccInfo {
	string Account 			= 1; // 玩家账号
	int64 PlayerId 			= 2; // 玩家Id
	int32 GameId 			= 3; // 游戏服Id
	string GameIP 			= 4; // 游戏服IP地址
	int32 IfForbidLogin 	= 5; // 是否被封了
	string ForbidEndTime 	= 6; // 封号截至时间
}

/*************************************** end ********************************************/

/************************************** 玩家相关 *****************************************/

/// 玩家上线
message SetPlayerOnOffline {
	int32 PlayerId 			= 1; // 玩家Id
	int32 TongId 			= 2; // 帮会Id
	int32 OnOffLine 		= 3; // 1位上线 0为下线
}

/*************************************** end ********************************************/
